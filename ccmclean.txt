Write a powershell script to delete c:\windows\ccmcache folder recursively from a list of machines (remote)using invoke-command scriptblock and write detailed output with each step if encountered with an error like test path and test ping finally write script execution action to a log 
Script must ask for remote machine user credentials before executing script block

Here is a PowerShell script that deletes the `C:\Windows\ccmcache` folder recursively from a list of remote machines using `Invoke-Command`. The script includes detailed output for each step, error handling, and logging functionality. It also prompts for user credentials before executing the script block.

```powershell
# Define the list of remote machines
$remoteMachines = @("Machine1", "Machine2", "Machine3")  # Replace with actual machine names

# Ask for user credentials
$credential = Get-Credential -Message "Please enter your credentials for the remote machines"

# Define the log file path
$logFile = "C:\Path\To\Your\LogFile.log"  # Change to your desired log file path

# Function to log messages to the log file
function Log-Message {
    param (
        [string]$message
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    "$timestamp - $message" | Out-File -FilePath $logFile -Append
}

# Start processing each machine
foreach ($machine in $remoteMachines) {
    Log-Message "Starting process for $machine"

    # Test if the machine is reachable
    if (Test-Connection -ComputerName $machine -Count 2 -Quiet) {
        Log-Message "$machine is reachable."

        # Define the script block to delete the ccmcache folder
        $scriptBlock = {
            param($folderPath)

            # Check if the folder exists
            if (Test-Path -Path $folderPath) {
                try {
                    # Remove the folder recursively
                    Remove-Item -Path $folderPath -Recurse -Force
                    Write-Output "Successfully deleted $folderPath"
                } catch {
                    Write-Output "Error deleting $folderPath: $_"
                    Log-Message "Error deleting $folderPath on $env:COMPUTERNAME: $_"
                }
            } else {
                Write-Output "$folderPath does not exist."
                Log-Message "$folderPath does not exist on $env:COMPUTERNAME."
            }
        }

        # Execute the script block on the remote machine
        Invoke-Command -ComputerName $machine -Credential $credential -ScriptBlock $scriptBlock -ArgumentList "C:\Windows\ccmcache"

    } else {
        Log-Message "$machine is not reachable."
        Write-Output "$machine is not reachable."
    }
}

Log-Message "Script execution completed."
```

### Explanation of the Script:

1. **Remote Machines List**: The script starts by defining an array of remote machine names. You should replace `"Machine1", "Machine2", "Machine3"` with the actual names of your target machines.

2. **User Credentials**: It prompts for user credentials using `Get-Credential`, which will be used to authenticate against the remote machines.

3. **Logging Functionality**: A function named `Log-Message` is defined to write messages to a specified log file with timestamps.

4. **Loop Through Machines**: The script loops through each machine in the `$remoteMachines` array:
   - It checks if the machine is reachable using `Test-Connection`.
   - If reachable, it defines a script block that checks for the existence of `C:\Windows\ccmcache` and attempts to delete it.
   - The deletion is wrapped in a try-catch block to handle any errors, logging them appropriately.

5. **Execution and Logging**: Each action and its outcome (success or failure) are logged, including whether the machine was reachable and whether the deletion was successful.

6. **Completion Message**: Finally, a completion message is logged after processing all machines.

### Notes:
- Ensure you have appropriate permissions to delete folders on the target machines.
- Modify the log file path as needed.
- Run this script in an elevated PowerShell session if required by your environment's policies.

